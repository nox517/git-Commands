# make directory a git repository
$ git init
----------------------------------------------------------------
$ git add <file or directory name>
----------------------------------------------------------------

# Adding a commit with message
$ git commit -m "Commit message in quotes"
----------------------------------------------------------------
# Message when files have not been staged (git add)
$ git status
----------------------------------------------------------------
# Running git config globally
$ git config --global user.email "my@emailaddress.com"
$ git config --global user.name "Brian Kerr"
----------------------------------------------------------------
# Create a new branch
$ git branch <branch_name>
----------------------------------------------------------------
# List all remote or local branches
$ git branch -a
----------------------------------------------------------------
# Delete a branch
$ git branch -d <branch_name>
----------------------------------------------------------------
# Checkout an existing branch
$ git checkout <branch_name>
----------------------------------------------------------------
# Checkout and create a new branch with that name
$ git checkout -b <new_branch>
----------------------------------------------------------------
# Merge changes into current branch
$ git merge <branch_name>
----------------------------------------------------------------
# Add remote repository
$ git remote <command> <remote_name> <remote_URL>
----------------------------------------------------------------
# List named remote repositories
$ git remote -v
----------------------------------------------------------------
# Pull from named remote
$ git pull origin staging
----------------------------------------------------------------
# Pull from URL (not frequently used)
$ git pull git@account_name.git.beanstalkapp.com:/acccount_name/repository_name.git staging
----------------------------------------------------------------
# Push a specific branch to a remote with named remote
$ git push origin staging
----------------------------------------------------------------
# Store current work with untracked files
$ git stash -u
----------------------------------------------------------------
# Bring stashed work back to the working directory
$ git stash pop
----------------------------------------------------------------
# Show entire git log
$ git log
----------------------------------------------------------------
# Show git log with date pameters
$ git log --<after/before/since/until>=<date>
----------------------------------------------------------------
# Show git log based on commit author
$ git log --<author>="Author Name"
----------------------------------------------------------------
# To remove a file from the working index (cached):
$ git rm --cached <file name>
----------------------------------------------------------------
# To delete a file (force):
$ git rm -f <file name>
----------------------------------------------------------------
# To remove an entire directory from the working index (cached):
$ git rm -r --cached <directory name>
----------------------------------------------------------------
# To delete an entire directory (force):
$ git rm -r -f <file name>
----------------------------------------------------------------
# To Solve conflict between remote and local (push from local to remote)
$ git pull origin master --allow-unrelated-histories
----------------------------------------------------------------
# Merge the confilct between remote and local
$ git merge --allow-unrelated-histories myfunnybrancy

----------------------------------------------------------------

Markdown [readme file]

Attach image 
![alt text](http://url/to/img.png) 


Add Heading

# header H1
## header H2
### header H3
#### header H4
##### header H5
###### header H6

**This is bold text**
*This text is italicized*	


You can quote text with a >.

In the words of Abraham Lincoln:

> Pardon my French



You can create an inline link by wrapping link text in brackets [ ], and then wrapping the URL in parentheses ( ). You can also use the keyboard shortcut command + k to create a link.

This site was built using [GitHub Pages](https://pages.github.com/).



